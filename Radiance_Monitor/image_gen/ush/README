Radiance Monitor, image_gen scripts

The scripts in this directory are used to generate images for specified 
data sources using the data files created by the data_extract portion of this
package. 

The scripts named in "camel case" (mixed case) may be called directly.  Those
named entirely in lower case are utility scripts which are used by the 
camel case scripts; they should not be called directly by the user.

There are two sets of scripts; one for the global, and one for the
regional.  They are similar, but not identical in function.  

The top level scripts are CkPlt_glbl.sh and CkPlt_rgnl.sh scripts.  This is 
and example of running them from the command line:

>  ./CkPlt_glbl.sh mysfx 2013053100

The "mysfx" is the identifying suffix.  This must match data processed by the
data_extract scripts, which should be in your $TANKDIR/stats/$SUFFIX directory.  
The date is optional.  If provided, the plot will be run with for this cycle 
(using a 30 day period ending with this cycle).  If no date is provided the 
last cycle processed will be used for the plot.

A second method of plotting is to use the Plot.sh script.  The calling sequence 
is:

>  ./Plot.sh mysfx 2013050118 2013052212

Here the plot will use the period cycle 2013050118 to 2013052212.

Assuming data is available and the top level plot scripts run the lower level 
scripts to set up the environement, move data and control files into work 
directories, and call the GrADS scripts (located in ../gscripts) to create image 
files.  The image files are then moved to the $TANKDIR/imgn/$SUFFIX/pngs 
directory. 

There is also a CkPlt_comp.sh script which can do comparison plots between 2 or 3
data sources.  The sources must be of the same type (global or regional).  The
calling sequence is:

>  ./CkPlt_comp.sh date suffix1 suffix2 [suffix3]

Date here must be in the format yyyymmddhh. If data is not available for any of 
the sources (suffix1, suffix2, suffix3), it will be missing on the plotted images.



FILE TRANSFERS:  
==== =========

Previous versions of this package used secure copy (scp) to push image files to 
the web server.  The scp command has enough overhead though that the large number
of transfers that the package performs can slow the web server.  To prevent server
slowdowns rsync is now used instead of scp.

Instead of pushing files the plot_* scripts now copy the image files to the $IMGNDIR 
directory.  The default location for this is ~/nbns/imgn/$SUFFIX (SUFFIX is the data
source identifier, such as mysfx), and it has subdirectories for angle, bcoef, bcor, 
horiz, summary, and time.  This is the same structure of the pngs directory on the 
web server.  The rsync utility can then be used to mirror the files in the $IMGNDIR 
to the web server's pngs directory.  

The Transfer.sh script can be used to accomplish the rsync mirroring.  It may be run
as a cron or from the command line, and takes a SUFFIX as it's only argument.  When
run it will copy any files in $IMGNDIR that are newer than the web server's versions.  
If there are no differences between the files in $IMGNDIR and the web server then no
file transfers are made.  This is an example of a cron entry to run Transfer.sh once
an hour at 20 minutes after the hour (HH:20:00):

20 * * * * /bin/sh /global/save/wx20es/RadMon_256/util/Radiance_Monitor/image_gen/ush/Transfer.sh opr 1>/ptmpp1/wx20es/logs/radopr/Transfer_opr.log 2>/ptmpp1/wx20es/logs/radopr/Transfer_opr.err


Please note that scripted file transfers generally cannot be done from zeus to the
web server.  If you need to move files from zeus you will have to resort to tarring them
up and moving them manually.  You may be able to convince the zeus admins to allow an
automated transfer but you will have to take that up with them.
