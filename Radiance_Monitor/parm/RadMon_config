##################################################################
#
# RadMon_config
#
# This parameter file set up the environment variables used in
# scripts to run the radiance monitor package components.
#
##################################################################

  echo "begin RadMon_config"

#
# MY_RADMON should point to your working directory which contains the 
# top level directory to the RadMon package.  If you checked out the package
# as part of the GSI point to the GSI's util/Radiance_Monitor directory. If
# you checked out only the Radiance_Monitor portion of the branch then
# MY_RADMON should point to that.
#
export MY_RADMON=${MY_RADMON:-}

#
#  The MY_TANKDIR will be the location for the extracted data files and
#  the control files used for image plotting.  This is the base definition 
#  and the succedding scripts will construct and use subdirectories under
#  this location.
#
export MY_TANKDIR=${MY_TANKDIR:-}

if [[ $RADMON_SUFFIX != "" && $RAD_AREA != "" ]]; then
   if [[ $RAD_AREA = "glb" ]]; then
      export TANKverf=${TANKverf:-${MY_TANKDIR}/stats/${RADMON_SUFFIX}}
      export TANKimg=${TANKimg:-${MY_TANKDIR}/stats/${RADMON_SUFFIX}}
   else
      export TANKverf=${TANKverf:-${MY_TANKDIR}/stats/regional/${RADMON_SUFFIX}}
      export TANKimg=${TANKimg:-${MY_TANKDIR}/stats/regional/${RADMON_SUFFIX}}
   fi
fi

#
#  Web server resources include the sever name (WEB_SVR), the user name
#  on the web server (WEB_USER), and location of the top level directory
#  for the html on the web server (WEBDIR).
#
export WEB_SVR=${WEB_SVR:-}
export WEB_USER=${WEB_USER:-}
export WEBDIR=${WEBDIR:-}


###############################################################################
###############################################################################
#                                                                             #
#  The definitions below are for internal reference and shouldn't need to be  #
#  edited, once they are set up by the RadMon_install.sh script.              #
#                                                                             #
###############################################################################
###############################################################################

export MY_MACHINE=wcoss
export LITTLE_ENDIAN=${LITTLE_ENDIAN:-0}


#
#  Log and work space definitions
#
export MY_PTMP=${MY_PTMP:-/ptmpp1}
export PTMP_USER=${PTMP_USER:-${MY_PTMP}/${LOGNAME}}
export MY_STMP=${MY_STMP:-/stmpp1}
export STMP_USER=${STMP_USER:-${MY_STMP}/${LOGNAME}}

export LOGSverf_rad=${LOGSverf_rad:-${PTMP_USER}/logs}
export LOGSverf=${LOGSverf_rad:-${PTMP_USER}/logs/rad${RADMON_SUFFIX}}
export LOGdir=${LOGdir:-${PTMP_USER}/logs/rad${RADMON_SUFFIX}}

export PLOT_WORK_DIR=${PLOT_WORK_DIR:-${STMP_USER}/plotjobs_${RADMON_SUFFIX}}
export WORKverf_rad=${WORKverf_rad:-${STMP_USER}}
  

#
#  Job queue check definition
#
if [[ $MY_MACHINE = "wcoss" ]]; then
  export CHECKQ=${CHECKQ:-"bjobs"}
else
  export CHECKQ=${CHECKQ:-"showq -u $LOGNAME"}
fi


#
#  Definitions for internal reference
#
export RADMON_DATA_EXTRACT=${RADMON_DATA_EXTRACT:-${MY_RADMON}/data_extract}
export DE_EXEC=${DE_EXEC:-${RADMON_DATA_EXTRACT}/exec}
export DE_PARM=${DE_PARM:-${RADMON_DATA_EXTRACT}/parm}
export DE_SCRIPTS=${DE_SCRIPTS:-${RADMON_DATA_EXTRACT}/ush}

export RADMON_IMAGE_GEN=${RADMON_IMAGE_GEN:-${MY_RADMON}/image_gen}
export IG_EXEC=${IG_EXEC:-${RADMON_IMAGE_GEN}/exec}
export IG_GSCRIPTS=${IG_GSCRIPTS:-${RADMON_IMAGE_GEN}/gscripts}
export IG_PARM=${IG_PARM:-${RADMON_IMAGE_GEN}/parm}
export IG_SCRIPTS=${IG_SCRIPTS:-${RADMON_IMAGE_GEN}/ush}

export RADMON_PARM=${RADMON_PARM:-${MY_RADMON}/parm}

. $RADMON_PARM/radmon.ver

export HOMEgdas=${HOMEgdas:-${MY_RADMON}/nwprod/gdas_radmon.${gdas_radmon_ver}}
export HOMEnam=${HOMEnam:-${MY_RADMON}/nwprod/nam_radmon.${nam_radmon_ver}}
export HOMEradmon=${HOMEradmon:-${MY_RADMON}/nwprod/radmon_shared.${radmon_shared_ver}}
 
export DATAROOT=${DATAROOT:-${STMP_USER}}

#
#  Definitions for parm files.  This allows users to swap in 
#  their version of the two parm files when using a central install
#  point and multiple users of the RadMon package.
#
export RADMON_CONFIG=${RADMON_CONFIG:-${RADMON_PARM}/RadMon_config}
export RADMON_USER_SETTINGS=${RADMON_USER_SETTINGS:-${RADMON_PARM}/RadMon_user_settings}


#
#  Utilities used by the RadMon package
#
export NCP=${NCP:-"/bin/cp -f"}
export Z=${Z:-"gz"}

if [[ $MY_MACHINE = "wcoss" ]]; then
   shell=sh
   . /usrx/local/Modules/default/init/${shell}
   module load lsf

   export SUB="bsub"
   export NWPROD=/nwprod
   export NDATE=${NWPROD}/util/exec/ndate
   export COMPRESS=/usrx/local/bin/pigz
   export UNCOMPRESS="/usrx/local/bin/unpigz -f"

elif [[ $MY_MACHINE = "cray" ]]; then
   module load prod_util	# defines $NDATE among other things
   module load prod_envir
   export SUB="bsub"
   export NWPROD=${COMROOTp1}
   export COMPRESS=gzip
   export UNCOMPRESS="gunzip -f"

elif [[ $MY_MACHINE = "theia" ]]; then
   export SUB=/apps/torque/default/bin/qsub
   export NWPROD=/scratch4/NCEPDEV/da/save/Michael.Lueken/nwprod
   export NDATE=${NWPROD}/util/exec/ndate
   export COMPRESS=gzip
   export UNCOMPRESS="gunzip -f"
fi


echo "end RadMon_config"
